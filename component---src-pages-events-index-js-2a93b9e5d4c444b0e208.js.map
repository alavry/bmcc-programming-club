{"version":3,"sources":["webpack:///./src/pages/events/index.js"],"names":["EventsPage","render","posts","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","title","className","style","flex-wrap","display","map","_ref","post","node","border","flex","padding","key","id","margin-bottom","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","frontmatter","date","excerpt","React","Component","propTypes","PropTypes","shape","array","pageQuery"],"mappings":"6QAMqBA,4FACnBC,kBAAS,IAEQC,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MACR,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAM,WACdL,EAAAC,EAAAC,cAAA,WAASI,UAAU,WACnBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACTN,EAAAC,EAAAC,cAAA,MAAII,UAAU,kCAAd,qBAEJN,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEC,YAAa,OAAQC,QAAS,QAASH,UAAU,aAC5DZ,EACKgB,IAAI,SAAAC,GAAA,IAASC,EAATD,EAAGE,KAAH,OACNb,EAAAC,EAAAC,cAAA,OACEI,UAAU,4BACVC,MAAO,CAAEO,OAAQ,oBAAqBC,KAAM,UAAWC,QAAS,WAChEC,IAAKL,EAAKM,IAEVlB,EAAAC,EAAAC,cAAA,KAAGK,MAAO,CAACY,gBAAgB,QACzBnB,EAAAC,EAAAC,cAACkB,EAAA,KAAD,CAAMd,UAAU,mBAAmBe,GAAIT,EAAKU,OAAOC,MAChDX,EAAKY,YAAYnB,QAGtBL,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,aAAQU,EAAKY,YAAYC,OAE3BzB,EAAAC,EAAAC,cAAA,SACGU,EAAKc,QACN1B,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACkB,EAAA,KAAD,CAAMd,UAAU,kBAAkBe,GAAIT,EAAKU,OAAOC,MAAlD,wBAhCoBI,IAAMC,WA6C9CpC,EAAWqC,UAAY,CACrBhC,KAAMiC,IAAUC,MAAM,CACpBjC,kBAAmBgC,IAAUC,MAAM,CACjChC,MAAO+B,IAAUE,WAKhB,IAAMC,EAAS","file":"component---src-pages-events-index-js-2a93b9e5d4c444b0e208.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport Helmet from 'react-helmet'\n\nexport default class EventsPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n    return (\n      <Layout>\n        <Helmet title=\"Events\"/>\n        <section className=\"section\">\n        <div className=\"has-text-centered content\">\n              <h1 className=\"has-text-weight-bold is-size-2\">Upcoming Events!</h1>\n        </div>\n          <div style={{ 'flex-wrap': 'wrap', display: 'flex'}} className=\"container\">\n            {posts\n                 .map(({ node: post }) => (\n                <div\n                  className=\"content has-text-centered\"\n                  style={{ border: '1px solid #eaecee', flex: '2 2 50%', padding: '2em 4em' }}\n                  key={post.id}\n                >\n                  <p style={{'margin-bottom':'0px'}}>\n                    <Link className=\"has-text-primary\" to={post.fields.slug}>\n                      {post.frontmatter.title}\n                    </Link>\n                  </p>\n                  <p>\n                    <small>{post.frontmatter.date}</small>\n                  </p>\n                  <p>\n                    {post.excerpt}\n                    <br />\n                  </p>\n                  <p>\n                    <Link className=\"button is-small\" to={post.fields.slug}>\n                      Read More\n                    </Link>\n                  </p>\n                </div>\n              ))}\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nEventsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport const pageQuery = graphql`\n  query EventsQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] },\n      filter: { frontmatter: { templateKey: { eq: \"event\" } }}\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 400)\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            templateKey\n            date(formatString: \"MMMM DD, YYYY - h:mm a\")\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}