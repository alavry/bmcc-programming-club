{"version":3,"sources":["webpack:///./src/pages/events/index.js"],"names":["EventsPage","render","posts","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","title","className","map","_ref","post","node","key","id","style","marginBottom","gatsby__WEBPACK_IMPORTED_MODULE_4__","to","fields","slug","frontmatter","date","excerpt","React","Component","propTypes","PropTypes","shape","array","pageQuery"],"mappings":"6QAMqBA,4FACnBC,kBAAS,IACQC,EAAUC,KAAKC,MAAMC,KAAKC,kBAAjCC,MACR,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAM,WACdL,EAAAC,EAAAC,cAAA,WAASI,UAAU,WACnBN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,6BACTN,EAAAC,EAAAC,cAAA,MAAII,UAAU,kCAAd,qBAEJN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,8BACZZ,EACKa,IAAI,SAAAC,GAAA,IAASC,EAATD,EAAGE,KAAH,OACNV,EAAAC,EAAAC,cAAA,OACEI,UAAU,wCACVK,IAAKF,EAAKG,IAEVZ,EAAAC,EAAAC,cAAA,KAAGW,MAAO,CAACC,aAAa,QACtBd,EAAAC,EAAAC,cAACa,EAAA,KAAD,CAAMT,UAAU,mBAAmBU,GAAIP,EAAKQ,OAAOC,MAChDT,EAAKU,YAAYd,QAGtBL,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,aAAQO,EAAKU,YAAYC,OAE3BpB,EAAAC,EAAAC,cAAA,SACGO,EAAKY,QACNrB,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAACa,EAAA,KAAD,CAAMT,UAAU,kBAAkBU,GAAIP,EAAKQ,OAAOC,MAAlD,wBA9BoBI,IAAMC,WA2C9C/B,EAAWgC,UAAY,CACrB3B,KAAM4B,IAAUC,MAAM,CACpB5B,kBAAmB2B,IAAUC,MAAM,CACjC3B,MAAO0B,IAAUE,WAKhB,IAAMC,EAAS","file":"component---src-pages-events-index-js-5432d4184f87c9cd25ee.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../../components/Layout'\nimport Helmet from 'react-helmet'\n\nexport default class EventsPage extends React.Component {\n  render() {\n    const { edges: posts } = this.props.data.allMarkdownRemark\n    return (\n      <Layout>\n        <Helmet title=\"Events\"/>\n        <section className=\"section\">\n        <div className=\"has-text-centered content\">\n              <h1 className=\"has-text-weight-bold is-size-2\">Upcoming Events!</h1>\n        </div>\n          <div className=\"container events-container\">\n            {posts\n                 .map(({ node: post }) => (\n                <div\n                  className=\"content has-text-centered events-item\"\n                  key={post.id}\n                >\n                  <p style={{marginBottom:'0px'}}>\n                    <Link className=\"has-text-primary\" to={post.fields.slug}>\n                      {post.frontmatter.title}\n                    </Link>\n                  </p>\n                  <p>\n                    <small>{post.frontmatter.date}</small>\n                  </p>\n                  <p>\n                    {post.excerpt}\n                    <br />\n                  </p>\n                  <p>\n                    <Link className=\"button is-small\" to={post.fields.slug}>\n                      Read More\n                    </Link>\n                  </p>\n                </div>\n              ))}\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nEventsPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport const pageQuery = graphql`\n  query EventsQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] },\n      filter: { frontmatter: { templateKey: { eq: \"event\" } }}\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 800)\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            templateKey\n            date(formatString: \"MMMM DD, YYYY - h:mm a\")\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}